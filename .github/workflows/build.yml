name: Build C++ Files

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up caching for build artifacts
        uses: actions/cache@v4
        with:
          path: build_cache
          key: ${{ runner.os }}-build-${{ hashFiles('**/*.cpp', '**/*.h') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Create build directory
        run: mkdir -p build_cache

      - name: Compile C++ files on Linux/macOS
        if: runner.os != 'Windows'
        run: |
          # Check if header files are present
          if find . -name '*.h' | grep -q '.'; then
            # Compile all .cpp files together if headers are found
            output="build_cache/all-cpp-${RUNNER_OS}.out"
            if [[ ! -f "$output" || "$(find . -name '*.cpp' -newer "$output")" ]]; then
              g++ -o "$output" $(find . -name '*.cpp')
            fi
          else
            # Compile each .cpp file individually if no headers are found
            find . -name '*.cpp' | while read file; do
              output="build_cache/$(basename ${file%.cpp})-${RUNNER_OS}.out"
              if [[ ! -f "$output" || "$file" -nt "$output" ]]; then
                g++ -o "$output" "$file"
              fi
            done
          fi

      - name: Compile C++ files on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          if (Get-ChildItem -Recurse -Filter *.h) {
            # Compile all .cpp files together if headers are found
            $output = "build_cache/all-cpp-windows.exe"
            if (!(Test-Path $output) -or (Get-ChildItem -Recurse -Filter *.cpp | Where-Object { $_.LastWriteTime -gt (Get-Item $output).LastWriteTime })) {
              g++ (Get-ChildItem -Recurse -Filter *.cpp | ForEach-Object { $_.FullName }) -o $output
            }
          }
          else {
            # Compile each .cpp file individually if no headers are found
            Get-ChildItem -Recurse -Filter *.cpp | ForEach-Object {
              $output = "build_cache/$($_.BaseName)-windows.exe"
              if (!(Test-Path $output) -or ($_.LastWriteTime -gt (Get-Item $output).LastWriteTime)) {
                g++ $_.FullName -o $output
              }
            }
          }

      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compiled-binaries-${{ matrix.os }}
          path: build_cache/
